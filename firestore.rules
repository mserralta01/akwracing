rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Courses collection - public read, admin write
    match /courses/{document=**} {
      allow read: true;  // Anyone can read courses
      allow write: if isAdmin();  // Only admins can modify courses
    }

    // Users collection - protected
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Registrations collection - authenticated access
    match /registrations/{registrationId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.userId || isAdmin()
      );
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 